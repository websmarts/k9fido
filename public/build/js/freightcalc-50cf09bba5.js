/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmory imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmory exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		Object.defineProperty(exports, name, {
/******/ 			configurable: false,
/******/ 			enumerable: true,
/******/ 			get: getter
/******/ 		});
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports) {

eval("\r\n/**\r\n * First we will load all of this project's JavaScript dependencies which\r\n * include Vue and Vue Resource. This gives a great starting point for\r\n * building robust, powerful web applications using Vue and Laravel.\r\n */\r\n\r\n// Vue.filter('measured', {\r\n//   // model -> view\r\n//   // formats the value when updating the input element.\r\n//   read: function(val) {\r\n//     return val.toFixed(2)\r\n//   },\r\n//   // view -> model\r\n//   // formats the value when updating the data.\r\n//   write: function(val, oldVal) {\r\n//     var number = +val.replace(/[^\\d.]/g, '')\r\n//     return isNaN(number) ? 0 : number\r\n//   }\r\n// })\r\n\r\n/**\r\n * Next, we will create a fresh Vue application instance and attach it to\r\n * the body of the page. From here, you may begin adding components to\r\n * the application, or feel free to tweak this setup for your needs.\r\n */\r\n\r\nVue.config.devtools = true;\r\n\r\n//Vue.component('Clientquotes', require('./components/Clientquotes.vue'));\r\n\r\nvar app  = new Vue({\r\n    el: '#app',\r\n    data: {\r\n    \t\r\n    \tclient: '',\r\n        location: '',\r\n    \tpostcode: '',\r\n    \tsuburb: '',\r\n    \tstatecode: '',\r\n        locationValid: false,\r\n    \tnewPackage:{},\r\n    \tpackages: [],\r\n    \tcompanies: {},\r\n    \tlowestTotalQuote: {},\r\n    \tlowestPackageQuote: {},\r\n    \tquotes: [], //{ company: 'Big freight Co', method: 'Fastex', cost: 456 },\r\n    \tinputMessage: ''\r\n    },\r\n    computed: {\r\n    \tactualWeight: function() {\r\n    \t\treturn _.sumBy(this.packages, function(o) {\r\n    \t\t\tvar weight = parseFloat(o['weight'])\r\n    \t\t\tif (! isNaN(weight) ) {\r\n    \t\t\t\treturn weight\r\n    \t\t\t}\r\n    \t\t})\r\n    \t},\r\n    \tcubicWeight: function() {\r\n    \t\treturn _.sumBy(this.packages, function(o) {\r\n    \t\t\tvar volume = (parseFloat(o['length']) * parseFloat(o['width']) * parseFloat(o['height']) ) * 250/1000000\r\n    \t\t\tif (! isNaN(volume) ) {\r\n    \t\t\t\treturn volume\r\n    \t\t\t}\t\r\n    \t\t})\r\n    \t},\r\n\r\n\r\n\r\n    },\r\n    methods: {\r\n    \tquoteTotal: function(quotes) {\r\n    \t\t//console.log(quotes[1].cost)\r\n    \t\t// This function gets called at the end\r\n    \t\t// of each table section for company-method-package_quotes list\r\n    \t\t// So here is a goo point to check if\r\n    \t\t// the current quote is a complete quote for all\r\n    \t\t// packages and if so is it the lowest all-up cost\r\n    \t\t// Also check if the quote for each package is the\r\n    \t\t// lowest quote for that particular package\r\n\r\n    \t\t// Current lowestTotalQuote\r\n    \t\tvar currentQuoteTotal = _.chain(quotes)\r\n\t\t\t    \t\t\t\t\t.map('cost')\r\n\t\t\t    \t\t\t\t\t.sum()\r\n\t\t\t    \t\t\t\t\t.value()\r\n\r\n\r\n    \t\t//var currentQuoteTotal =  _.sum(_.map(quotes,'cost'))\r\n\r\n    \t\t// Check if current quote covers all packages\r\n    \t\tvar allPackages = _.every(this.packages, function(p){\r\n    \t\t\treturn _.find(quotes, function(o){\r\n    \t\t\t\treturn o.package_id == p.id\r\n    \t\t\t} )\r\n    \t\t})\r\n    \t\tconsole.log('All Packages', allPackages)\r\n\r\n    \t\treturn currentQuoteTotal.toFixed(2)\r\n\t\t  \r\n    \t},\r\n    \tcompanyQuotes: function(companyKey){\r\n    \t\t// find all quotes with companyKey\r\n    \t\tvar quotes = _.find(this.quotes, function(quote){\r\n    \t\t\treturn quote.company == companyKey\r\n    \t\t})\r\n    \t\tconsole.log(companyKey, quotes)\r\n    \t\treturn quotes\r\n\r\n    \t},\r\n    \tformKeyup: function() {\r\n    \t\tthis.inputMessage = ''\r\n    \t},\r\n    \taddPackage: function () {\r\n\r\n    \t\t//console.log(this.newPackage['length'])\r\n    \t\tif(\r\n    \t\t\t(typeof this.newPackage['length'] !== 'undefined') && (parseFloat(this.newPackage['length']) > 0 ) &&\r\n    \t\t\t(typeof this.newPackage['width'] !== 'undefined') && (parseFloat(this.newPackage['width']) > 0 ) &&\r\n    \t\t\t(typeof this.newPackage['height'] !== 'undefined') && (parseFloat(this.newPackage['height']) > 0 ) &&\r\n    \t\t\t(typeof this.newPackage['weight'] !== 'undefined') && (parseFloat(this.newPackage['weight']) > 0 )\r\n    \t\t) {\r\n    \t\t\tthis.newPackage.id = this.packages.length + 1 \r\n    \t\t\tthis.packages.push(this.newPackage)\r\n\t      \t\tthis.newPackage = {};\r\n\r\n\t      \t\t\r\n\r\n    \t\t} else {\r\n    \t\t\t//alert (\"package data entered is not valid\")\r\n    \t\t\tthis.inputMessage = 'Invalid input, try again ...'\r\n    \t\t}\r\n    \t\t\r\n\t      \t\r\n    \t},\r\n        getQuotes: function() {\r\n            // make remote call - just to test - use get quotes button me thinks\r\n            // If location is set\r\n            // AND\r\n            // Package count > 0\r\n            if(this.locationValid && this.packages.length > 0){\r\n                // make the remote call to get the quotes\r\n                this.remote({\r\n                    packages: this.packages,\r\n                    postcode: this.postcode,\r\n                    suburb: this.suburb,\r\n                    statecode: this.statecode\r\n                });\r\n            }\r\n\r\n                \r\n        },\r\n\r\n    \tpackageData: function(item) {\r\n    \t\treturn 'L: ' + item['length'] +  ' W: ' + item['width'] + ' H: ' + item['height'] + ' Kg: ' + item['weight'];\r\n    \t},\r\n    \t\r\n\t    remote: function remote(data){\n\t    \tvar this$1 = this;\n\r\n\t    \tvar url = '/freight/quote';\r\n\t\t\treturn this.$http.post(url, data).then(function (response) {\r\n\t\t\t// success callback\r\n\t\t\t//console.log(response.body.quotes);\r\n\t\t\tvar quotes = response.body.quotes;\r\n\r\n\t\t\t// for every company/method/quotes list\r\n\t\t\t// total quote list cost and assig to\r\n\t\t\t// company/method/total\r\n\t\t\tvar self = this$1\r\n\t\t\t _.each(quotes, function(q) {\r\n\t\t\t\t_.each(q, function(fmethod, fcompany) {\r\n\t\t\t\t\tfmethod['total'] = _.chain(fmethod.quotes)\r\n\t\t\t\t\t\t\t\t\t\t.map('cost')\r\n\t\t\t\t\t\t\t\t\t\t.sum()\r\n\t\t\t\t\t\t\t\t\t\t.value()\r\n\r\n\t\t\t\t\tvar package_ids = _.map(self.packages,'id')\r\n\t\t\t\t\tvar quote_package_ids = \t_.chain(fmethod.quotes)\r\n\t\t\t\t\t\t\t\t\t\t\t\t.map('package_id')\r\n\t\t\t\t\t\t\t\t\t\t\t\t.value()\r\n\r\n\t\t\t\t\t// console.log('pids', package_ids)\r\n\r\n\t\t\t\t\t// console.log('qpids', quote_package_ids)\r\n\r\n\t\t\t\t\tfmethod['missed_packages'] = _.difference(package_ids,quote_package_ids)\r\n\r\n\t\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t\tthis$1.companies = response.body.companies;\r\n\t\t\tthis$1.quotes = quotes;\r\n\t\t\t// _.each(quotes, function(quote,company){\r\n\t\t\t// \tconsole.log(quote)\r\n\t\t\t//     this.quotes.push(quote);\r\n\t\t\t// }.bind(this));\r\n\r\n\t\t\t}, function (response) {\r\n\t\t\t// error callback\r\n\t\t\t//console.log(response);\r\n\t\t\t});\r\n\t    },\r\n        querySearchAsync: function querySearchAsync(queryString, cb) {\r\n        //let queryStringLength = typeof queryString.length !== 'undefned' ? queryString.length : 0\r\n        //console.log(queryString.length);\r\n        if( queryString.length < 3 ){\r\n             cb([{'value':'min three characters'}])\r\n             return;\r\n        }\r\n\r\n       var url = '/freight/location?postcode=' + queryString\r\n            return this.$http.get(url).then(function (response) {\r\n            // success callback\r\n            // console.log(response.body);\r\n            var options = response.body;\r\n            cb(options)\r\n\r\n            }, function (response) {\r\n            // error callback\r\n            //console.log(response);\r\n            });\r\n      },\r\n      handleLocationSelect: function handleLocationSelect(item) {\r\n        // value ='postcode, suburb, state'\r\n        var loc = item.value.split(',')\r\n        this.postcode = loc[0].trim()\r\n        this.suburb = loc[1].trim()\r\n        this.statecode = loc[2].trim()\r\n\r\n        if (    this.postcode.length > 2 &&\r\n                this.suburb.length > 3 &&\r\n                this.statecode.length > 1 ){\r\n            // set locationValid\r\n            this.locationValid = true\r\n        }\r\n\r\n        // clear out quotes as they could be invalid\r\n        this.quotes = []\r\n      },\r\n\r\n     \r\n\t    \r\n      lookupClientAsync: function lookupClientAsync(queryString, cb) {\r\n      \t//let queryStringLength = typeof queryString.length !== 'undefned' ? queryString.length : 0\r\n      \t//console.log(queryString.length);\r\n      \tif( queryString.length < 3 ){\r\n      \t\t cb([{'value':'min three characters'}])\r\n      \t\t return;\r\n      \t}\r\n         \r\n            var url = '/clientlookup?q=' + queryString\r\n\t\t\treturn this.$http.get(url).then(function (response) {\r\n\t\t\t// success callback\r\n\t\t\tconsole.log(response.body);\r\n\t\t\tvar results = response.body;\r\n\r\n            var options = _.map(results, function(r) {\r\n                return { value: r.name + ', ' + r.postcode + ', ' + r.city  + ', ' + r.state }\r\n            })\r\n\r\n            console.log(options)\r\n\t\t\tcb(options)\r\n\r\n\t\t\t}, function (response) {\r\n\t\t\t// error callback\r\n\t\t\t//console.log(response);\r\n\t\t\t});\r\n      },\r\n      handleClientSelect: function handleClientSelect(item) {\r\n        // value ='postcode, suburb, state'\r\n        var loc = item.value.split(',')\r\n        this.postcode = loc[1].trim()\r\n        this.suburb = loc[2].trim()\r\n        this.statecode = loc[3].trim()\r\n\r\n        if (    this.postcode.length > 2 &&\r\n                this.suburb.length > 3 &&\r\n                this.statecode.length > 1 ){\r\n            // set locationValid\r\n            this.locationValid = true\r\n        }\r\n\r\n        // clear out quotes as they could be invalid\r\n        this.quotes = []\r\n      }\r\n\r\n    }, // end of methods\r\n    \r\n\r\n    \r\n});//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }
/******/ ]);