{"version":3,"sources":["app.js","SimpleAjaxUploader.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzfile":"all.js","sourcesContent":["/**\r\n * First we will load all of this project's JavaScript dependencies which\r\n * include Vue and Vue Resource. This gives a great starting point for\r\n * building robust, powerful web applications using Vue and Laravel.\r\n */\r\n\r\n\r\n\r\n$( function() {\r\n\r\n\t$.ajaxSetup({\r\n\t    headers: {\r\n\t        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n\t    }\r\n\t});\r\n\r\n\t// Sortable for type images\r\n    $( \"#sortable\" ).sortable({\r\n\r\n\t    axis: 'y',\r\n\t    update: function (event, ui) {\r\n\t        var data = $(this).sortable('serialize');\r\n\r\n\t        console.log(data);\r\n\r\n\t        // POST to server using $.post or $.ajax\r\n\t        $.post('/ajax/image/sort', data);\r\n\t    }\r\n\r\n    });\r\n\r\n    // setup delete click handler to delete images\r\n    $('#sortable li a').on('click', function(e){\r\n    \tvar imageId = $(e.target).closest('li').attr('id').substring(5,20) \r\n    \t\r\n\r\n    \t$.post('/ajax/image/delete/' + imageId, function(data) {\r\n    \t\tif (data > 0){\r\n    \t\t\t//$('#item-'+ data).remove(); // remove the deleted item\r\n    \t\t\tlocation.reload();\r\n    \t\t}\r\n    \t\t\r\n    \t});\r\n    \t\r\n\r\n    })\r\n\r\n\r\n\r\n\r\n\r\n\r\n    $( \"#sortable\" ).disableSelection();\r\n\r\n\r\n    // flash message fader\r\n    $('.Alert').delay( 3000 ).fadeOut( 400 );\r\n});","/**\r\n * Simple Ajax Uploader\r\n * Version 2.5.5\r\n * https://github.com/LPology/Simple-Ajax-Uploader\r\n *\r\n * Copyright 2012-2016 LPology, LLC\r\n * Released under the MIT license\r\n */\r\n\r\n;(function( global, factory ) {\r\n    /*globals define, module */\r\n    if ( typeof define === 'function' && define.amd ) {\r\n        define( function() {\r\n            return factory( global );\r\n        });\r\n\r\n    } else if ( typeof module === 'object' && module.exports ) {\r\n        module.exports = factory( global );\r\n\r\n    } else {\r\n        global.ss = factory( global );\r\n    }\r\n\r\n}( typeof window !== 'undefined' ? window : this, function( window ) {\r\n\r\nvar ss = window.ss || {},\r\n\r\n    // ss.trim()\r\n    rLWhitespace = /^\\s+/,\r\n    rTWhitespace = /\\s+$/,\r\n\r\n    // ss.getUID\r\n    uidReplace = /[xy]/g,\r\n\r\n    // ss.getFilename()\r\n    rPath = /.*(\\/|\\\\)/,\r\n\r\n    // ss.getExt()\r\n    rExt = /.*[.]/,\r\n\r\n    // ss.hasClass()\r\n    rHasClass = /[\\t\\r\\n]/g,\r\n\r\n    // Check for Safari -- it doesn't like multi file uploading. At all.\r\n    // http://stackoverflow.com/a/9851769/1091949\r\n    isSafari = Object.prototype.toString.call( window.HTMLElement ).indexOf( 'Constructor' ) > 0,\r\n\r\n    isIE7 = ( navigator.userAgent.indexOf('MSIE 7') !== -1 ),\r\n\r\n    // Check whether XHR uploads are supported\r\n    input = document.createElement( 'input' ),\r\n\r\n    XhrOk;\r\n\r\ninput.type = 'file';\r\n\r\nXhrOk = ( 'multiple' in input &&\r\n          typeof File !== 'undefined' &&\r\n          typeof ( new XMLHttpRequest() ).upload !== 'undefined' );\r\n\r\n\r\n/**\r\n* Converts object to query string\r\n*/\r\nss.obj2string = function( obj, prefix ) {\r\n    \"use strict\";\r\n\r\n    var str = [];\r\n\r\n    for ( var prop in obj ) {\r\n        if ( obj.hasOwnProperty( prop ) ) {\r\n            var k = prefix ? prefix + '[' + prop + ']' : prop, v = obj[prop];\r\n            str.push( typeof v === 'object' ?\r\n                        ss.obj2string( v, k ) :\r\n                        encodeURIComponent( k ) + '=' + encodeURIComponent( v ) );\r\n        }\r\n    }\r\n\r\n    return str.join( '&' );\r\n};\r\n\r\n/**\r\n* Copies all missing properties from second object to first object\r\n*/\r\nss.extendObj = function( first, second ) {\r\n    \"use strict\";\r\n\r\n    for ( var prop in second ) {\r\n        if ( second.hasOwnProperty( prop ) ) {\r\n            first[prop] = second[prop];\r\n        }\r\n    }\r\n};\r\n\r\nss.addEvent = function( elem, type, fn ) {\r\n    \"use strict\";\r\n\r\n    if ( elem.addEventListener ) {\r\n        elem.addEventListener( type, fn, false );\r\n\r\n    } else {\r\n        elem.attachEvent( 'on' + type, fn );\r\n    }\r\n    return function() {\r\n        ss.removeEvent( elem, type, fn );\r\n    };\r\n};\r\n\r\nss.removeEvent = document.removeEventListener ?\r\n    function( elem, type, fn ) {\r\n        if ( elem.removeEventListener ) {\r\n            elem.removeEventListener( type, fn, false );\r\n        }\r\n    } :\r\n    function( elem, type, fn ) {\r\n        var name = 'on' + type;\r\n\r\n        if ( typeof elem[ name ] === 'undefined' ) {\r\n            elem[ name ] = null;\r\n        }\r\n\r\n        elem.detachEvent( name, fn );\r\n    };\r\n\r\nss.newXHR = function() {\r\n    \"use strict\";\r\n\r\n    if ( typeof XMLHttpRequest !== 'undefined' ) {\r\n        return new window.XMLHttpRequest();\r\n\r\n    } else if ( window.ActiveXObject ) {\r\n        try {\r\n            return new window.ActiveXObject( 'Microsoft.XMLHTTP' );\r\n        } catch ( err ) {\r\n            return false;\r\n        }\r\n    }\r\n};\r\n\r\nss.encodeUTF8 = function( str ) {\r\n    \"use strict\";\r\n    /*jshint nonstandard:true*/\r\n    return unescape( encodeURIComponent( str ) );\r\n};\r\n\r\nss.getIFrame = function() {\r\n    \"use strict\";\r\n\r\n    var id = ss.getUID(),\r\n        iframe;\r\n\r\n    // IE7 can only create an iframe this way, all others are the other way\r\n    if ( isIE7 ) {\r\n        iframe = document.createElement('<iframe src=\"javascript:false;\" name=\"' + id + '\">');\r\n\r\n    } else {\r\n        iframe = document.createElement('iframe');\r\n        /*jshint scripturl:true*/\r\n        iframe.src = 'javascript:false;';\r\n        iframe.name = id;\r\n    }\r\n\r\n    iframe.style.display = 'none';\r\n    iframe.id = id;\r\n    return iframe;\r\n};\r\n\r\nss.getForm = function( opts ) {\r\n    \"use strict\";\r\n\r\n    var form = document.createElement('form');\r\n\r\n    form.encoding = 'multipart/form-data'; // IE\r\n    form.enctype = 'multipart/form-data';\r\n    form.style.display = 'none';\r\n\r\n    for ( var prop in opts ) {\r\n        if ( opts.hasOwnProperty( prop ) ) {\r\n            form[prop] = opts[prop];\r\n        }\r\n    }\r\n\r\n    return form;\r\n};\r\n\r\nss.getHidden = function( name, value ) {\r\n    \"use strict\";\r\n\r\n    var input = document.createElement( 'input' );\r\n\r\n    input.type = 'hidden';\r\n    input.name = name;\r\n    input.value = value;\r\n    return input;\r\n};\r\n\r\n/**\r\n* Parses a JSON string and returns a Javascript object\r\n* Borrowed from www.jquery.com\r\n*/\r\nss.parseJSON = function( data ) {\r\n    \"use strict\";\r\n    /*jshint evil:true*/\r\n\r\n    if ( !data ) {\r\n        return false;\r\n    }\r\n\r\n    data = ss.trim( data + '' );\r\n\r\n    if ( window.JSON && window.JSON.parse ) {\r\n        try {\r\n            // Support: Android 2.3\r\n            // Workaround failure to string-cast null input\r\n            return window.JSON.parse( data + '' );\r\n        } catch ( err ) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var rvalidtokens = /(,)|(\\[|{)|(}|])|\"(?:[^\"\\\\\\r\\n]|\\\\[\"\\\\\\/bfnrt]|\\\\u[\\da-fA-F]{4})*\"\\s*:?|true|false|null|-?(?!0\\d)\\d+(?:\\.\\d+|)(?:[eE][+-]?\\d+|)/g,\r\n        depth = null,\r\n        requireNonComma;\r\n\r\n    // Guard against invalid (and possibly dangerous) input by ensuring that nothing remains\r\n    // after removing valid tokens\r\n    return data && !ss.trim( data.replace( rvalidtokens, function( token, comma, open, close ) {\r\n\r\n        // Force termination if we see a misplaced comma\r\n        if ( requireNonComma && comma ) {\r\n            depth = 0;\r\n        }\r\n\r\n        // Perform no more replacements after returning to outermost depth\r\n        if ( depth === 0 ) {\r\n            return token;\r\n        }\r\n\r\n        // Commas must not follow \"[\", \"{\", or \",\"\r\n        requireNonComma = open || comma;\r\n\r\n        // Determine new depth\r\n        // array/object open (\"[\" or \"{\"): depth += true - false (increment)\r\n        // array/object close (\"]\" or \"}\"): depth += false - true (decrement)\r\n        // other cases (\",\" or primitive): depth += true - true (numeric cast)\r\n        depth += !close - !open;\r\n\r\n        // Remove this token\r\n        return '';\r\n    }) ) ?\r\n        ( Function( 'return ' + data ) )() :\r\n        false;\r\n};\r\n\r\nss.getBox = function( elem ) {\r\n    \"use strict\";\r\n\r\n    var box,\r\n        docElem,\r\n        top = 0,\r\n        left = 0;\r\n\r\n    if ( elem.getBoundingClientRect ) {\r\n        box = elem.getBoundingClientRect();\r\n        docElem = document.documentElement;\r\n        top = box.top + ( window.pageYOffset || docElem.scrollTop )  - ( docElem.clientTop  || 0 );\r\n        left = box.left + ( window.pageXOffset || docElem.scrollLeft ) - ( docElem.clientLeft || 0 );\r\n\r\n    } else {\r\n        do {\r\n            left += elem.offsetLeft;\r\n            top += elem.offsetTop;\r\n        } while ( ( elem = elem.offsetParent ) );\r\n    }\r\n\r\n    return {\r\n        top: Math.round( top ),\r\n        left: Math.round( left )\r\n    };\r\n};\r\n\r\n/**\r\n* Helper that takes object literal\r\n* and add all properties to element.style\r\n* @param {Element} el\r\n* @param {Object} styles\r\n*/\r\nss.addStyles = function( elem, styles ) {\r\n    \"use strict\";\r\n\r\n    for ( var name in styles ) {\r\n        if ( styles.hasOwnProperty( name ) ) {\r\n            elem.style[name] = styles[name];\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n* Function places an absolutely positioned\r\n* element on top of the specified element\r\n* copying position and dimensions.\r\n*/\r\nss.copyLayout = function( from, to ) {\r\n    \"use strict\";\r\n\r\n    var box = ss.getBox( from );\r\n\r\n    ss.addStyles( to, {\r\n        position: 'absolute',\r\n        left : box.left + 'px',\r\n        top : box.top + 'px',\r\n        width : from.offsetWidth + 'px',\r\n        height : from.offsetHeight + 'px'\r\n    });\r\n};\r\n\r\n/**\r\n* Generates unique ID\r\n* Complies with RFC 4122 version 4\r\n* http://stackoverflow.com/a/2117523/1091949\r\n* ID begins with letter \"a\" to be safe for HTML elem ID/name attr (can't start w/ number)\r\n*/\r\nss.getUID = function() {\r\n    \"use strict\";\r\n\r\n    /*jshint bitwise: false*/\r\n    return 'axxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(uidReplace, function(c) {\r\n        var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\r\n        return v.toString(16);\r\n    });\r\n};\r\n\r\n/**\r\n* Removes white space from left and right of string\r\n* Uses native String.trim if available\r\n* Adapted from www.jquery.com\r\n*/\r\nvar trim = \"\".trim;\r\n\r\nss.trim = trim && !trim.call(\"\\uFEFF\\xA0\") ?\r\n    function( text ) {\r\n        return text === null ?\r\n            \"\" :\r\n            trim.call( text );\r\n    } :\r\n    function( text ) {\r\n        return text === null ?\r\n            \"\" :\r\n            text.toString().replace( rLWhitespace, '' ).replace( rTWhitespace, '' );\r\n    };\r\n\r\nvar arr = [];\r\n\r\nss.indexOf = arr.indexOf ?\r\n    function( array, elem ) {\r\n        return array.indexOf( elem );\r\n    } :\r\n    function( array, elem ) {\r\n        for ( var i = 0, len = array.length; i < len; i++ ) {\r\n            if ( array[i] === elem ) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n\r\n/**\r\n* Removes an element from an array\r\n*/\r\nss.arrayDelete = function( array, elem ) {\r\n    var index = ss.indexOf( array, elem );\r\n\r\n    if ( index > -1 ) {\r\n        array.splice( index, 1 );\r\n    }\r\n};\r\n\r\n/**\r\n* Extract file name from path\r\n*/\r\nss.getFilename = function( path ) {\r\n    \"use strict\";\r\n    return path.replace( rPath, '' );\r\n};\r\n\r\n/**\r\n* Get file extension\r\n*/\r\nss.getExt = function( file ) {\r\n    \"use strict\";\r\n    return ( -1 !== file.indexOf( '.' ) ) ? file.replace( rExt, '' ) : '';\r\n};\r\n\r\n/**\r\n* Checks whether an element is visible\r\n*/\r\nss.isVisible = function( elem ) {\r\n    \"use strict\";\r\n\r\n    if ( !elem ) {\r\n        return false;\r\n    }\r\n\r\n    if ( elem.nodeType !== 1 || elem == document.body ) {\r\n        elem = null;\r\n        return true;\r\n    }\r\n\r\n    if ( elem.parentNode &&\r\n        ( elem.offsetWidth > 0 ||\r\n         elem.offsetHeight > 0 ||\r\n         ss.getStyle( elem, 'display' ).toLowerCase() != 'none' ) )\r\n    {\r\n        return ss.isVisible( elem.parentNode );\r\n    }\r\n\r\n    elem = null;\r\n    return false;\r\n};\r\n\r\nss.getStyle = function( elem, style ) {\r\n    \"use strict\";\r\n\r\n    if ( window.getComputedStyle ) {\r\n        var cs = elem.ownerDocument.defaultView.getComputedStyle( elem, null );\r\n        return cs.getPropertyValue( style );\r\n\r\n    } else if ( elem.currentStyle && elem.currentStyle[ style ] ) {\r\n        return elem.currentStyle[ style ];\r\n    }\r\n};\r\n\r\n/**\r\n* Accepts a form element and returns an object with key/value pairs for the form fields\r\n*/\r\nss.getFormObj = function( form ) {\r\n    \"use strict\";\r\n\r\n    var elems = form.elements,\r\n        ignore = ['button', 'submit', 'image', 'reset'],\r\n        inputs = {},\r\n        obj;\r\n\r\n    for ( var i = 0, len = elems.length; i < len; i++ ) {\r\n        obj = {};\r\n\r\n        if ( elems[ i ].name && !elems[ i ].disabled && ss.indexOf( ignore, elems[ i ].type ) === -1 ) {\r\n            if ( (elems[ i ].type == 'checkbox' || elems[ i ].type == 'radio') &&\r\n                 !elems[ i ].checked )\r\n            {\r\n                continue;\r\n            }\r\n\r\n            obj[ elems[ i ].name ] = ss.val( elems[ i ] );\r\n            ss.extendObj( inputs, obj );\r\n        }\r\n    }\r\n\r\n    return inputs;\r\n};\r\n\r\n/**\r\n* Accepts a form input element and returns its value\r\n*/\r\nss.val = function( elem ) {\r\n    \"use strict\";\r\n\r\n    if ( !elem ) {\r\n        return;\r\n    }\r\n\r\n    if ( elem.nodeName.toUpperCase() == 'SELECT' ) {\r\n        var options = elem.options,\r\n            index = elem.selectedIndex,\r\n            one = elem.type === 'select-one' || index < 0,\r\n            values = one ? null : [],\r\n            value;\r\n\r\n        for ( var i = 0, len = options.length; i < len; i++ ) {\r\n            if ( ( options[ i ].selected || i === index ) && !options[ i ].disabled ) {\r\n                value = !options[ i ].value ? options[ i ].text : options[ i ].value;\r\n\r\n                if ( one ) {\r\n                    return value;\r\n                }\r\n\r\n                values.push( value );\r\n            }\r\n        }\r\n\r\n        return values;\r\n\r\n    } else {\r\n        return elem.value;\r\n    }\r\n};\r\n\r\n/**\r\n* Check whether element has a particular CSS class\r\n* Parts borrowed from www.jquery.com\r\n*/\r\nss.hasClass = function( elem, name ) {\r\n    \"use strict\";\r\n\r\n    if ( !elem || !name ) {\r\n        return false;\r\n    }\r\n\r\n    return ( ' ' + elem.className + ' ' ).replace( rHasClass, ' ' ).indexOf( ' ' + name + ' ' ) >= 0;\r\n};\r\n\r\n/**\r\n* Adds CSS class to an element\r\n*/\r\nss.addClass = function( elem, name ) {\r\n    \"use strict\";\r\n\r\n    if ( !elem || !name ) {\r\n        return false;\r\n    }\r\n\r\n    if ( !ss.hasClass( elem, name ) ) {\r\n        elem.className += ' ' + name;\r\n    }\r\n};\r\n\r\n/**\r\n* Removes CSS class from an element\r\n*/\r\nss.removeClass = (function() {\r\n    \"use strict\";\r\n\r\n    var c = {}; //cache regexps for performance\r\n\r\n    return function( e, name ) {\r\n        if ( !e || !name ) {\r\n            return false;\r\n        }\r\n\r\n        if ( !c[name] ) {\r\n            c[name] = new RegExp('(?:^|\\\\s)' + name + '(?!\\\\S)');\r\n        }\r\n\r\n        e.className = e.className.replace( c[name], '' );\r\n    };\r\n})();\r\n\r\n/**\r\n* Nulls out event handlers to prevent memory leaks in IE6/IE7\r\n* http://javascript.crockford.com/memory/leak.html\r\n* @param {Element} d\r\n* @return void\r\n*/\r\nss.purge = function( d ) {\r\n    \"use strict\";\r\n\r\n    var a = d.attributes, i, l, n;\r\n\r\n    if ( a ) {\r\n        for ( i = a.length - 1; i >= 0; i -= 1 ) {\r\n            n = a[i].name;\r\n\r\n            if ( typeof d[n] === 'function' ) {\r\n                d[n] = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    a = d.childNodes;\r\n\r\n    if ( a ) {\r\n        l = a.length;\r\n        for ( i = 0; i < l; i += 1 ) {\r\n            ss.purge( d.childNodes[i] );\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n* Removes element from the DOM\r\n*/\r\nss.remove = function( elem ) {\r\n    \"use strict\";\r\n\r\n    if ( elem && elem.parentNode ) {\r\n        // null out event handlers for IE\r\n        ss.purge( elem );\r\n        elem.parentNode.removeChild( elem );\r\n    }\r\n    elem = null;\r\n};\r\n\r\n/**\r\n* Accepts either a jQuery object, a string containing an element ID, or an element,\r\n* verifies that it exists, and returns the element.\r\n* @param {Mixed} elem\r\n* @return {Element}\r\n*/\r\nss.verifyElem = function( elem ) {\r\n    \"use strict\";\r\n    /*globals jQuery */\r\n\r\n    if ( typeof jQuery !== 'undefined' && elem instanceof jQuery ) {\r\n        elem = elem[0];\r\n\r\n    } else if ( typeof elem === 'string' ) {\r\n        if ( elem.charAt( 0 ) == '#' ) {\r\n            elem = elem.substr( 1 );\r\n        }\r\n        elem = document.getElementById( elem );\r\n    }\r\n\r\n    if ( !elem || elem.nodeType !== 1 ) {\r\n        return false;\r\n    }\r\n\r\n    if ( elem.nodeName.toUpperCase() == 'A' ) {\r\n        elem.style.cursor = 'pointer';\r\n\r\n        ss.addEvent( elem, 'click', function( e ) {\r\n            if ( e && e.preventDefault ) {\r\n                e.preventDefault();\r\n\r\n            } else if ( window.event ) {\r\n                window.event.returnValue = false;\r\n            }\r\n        });\r\n    }\r\n\r\n    return elem;\r\n};\r\n\r\nss._options = {};\r\n\r\nss.uploadSetup = function( options ) {\r\n    \"use strict\";\r\n    ss.extendObj( ss._options, options );\r\n};\r\n\r\nss.SimpleUpload = function( options ) {\r\n    \"use strict\";\r\n\r\n    this._opts = {\r\n        button: '',\r\n        url: '',\r\n        dropzone: '',\r\n        dragClass: '',\r\n        form: '',\r\n        overrideSubmit: true,\r\n        cors: false,\r\n        withCredentials: false,\r\n        progressUrl: false,\r\n        sessionProgressUrl: false,\r\n        nginxProgressUrl: false,\r\n        multiple: false,\r\n        maxUploads: 3,\r\n        queue: true,\r\n        checkProgressInterval: 500,\r\n        keyParamName: 'APC_UPLOAD_PROGRESS',\r\n        sessionProgressName: 'PHP_SESSION_UPLOAD_PROGRESS',\r\n        nginxProgressHeader: 'X-Progress-ID',\r\n        customProgressHeaders: {},\r\n        corsInputName: 'XHR_CORS_TARGETORIGIN',\r\n        allowedExtensions: [],\r\n        accept: '',\r\n        maxSize: false,\r\n        name: '',\r\n        data: {},\r\n        noParams: true,\r\n        autoSubmit: true,\r\n        multipart: true,\r\n        method: 'POST',\r\n        responseType: '',\r\n        debug: false,\r\n        hoverClass: '',\r\n        focusClass: '',\r\n        disabledClass: '',\r\n        customHeaders: {},\r\n        encodeHeaders: true,\r\n        autoCalibrate: true,\r\n        onBlankSubmit: function() {},\r\n        onAbort: function( filename, uploadBtn, size ) {},\r\n        onChange: function( filename, extension, uploadBtn, size, file ) {},\r\n        onSubmit: function( filename, extension, uploadBtn, size ) {},\r\n        onProgress: function( pct ) {},\r\n        onUpdateFileSize: function( filesize ) {},\r\n        onComplete: function( filename, response, uploadBtn, size ) {},\r\n        onExtError: function( filename, extension ) {},\r\n        onSizeError: function( filename, fileSize ) {},\r\n        onError: function( filename, type, status, statusText, response, uploadBtn, size ) {},\r\n        startXHR: function( filename, fileSize, uploadBtn ) {},\r\n        endXHR: function( filename, fileSize, uploadBtn ) {},\r\n        startNonXHR: function( filename, uploadBtn ) {},\r\n        endNonXHR: function( filename, uploadBtn ) {}\r\n    };\r\n\r\n    ss.extendObj( this._opts, ss._options ); // Include any setup options\r\n    ss.extendObj( this._opts, options ); // Then add options for this instance\r\n\r\n    // An array of objects, each containing two items: a file and a reference\r\n    // to the button which triggered the upload: { file: uploadFile, btn: button }\r\n    this._queue = [];\r\n\r\n    this._active = 0;\r\n    this._disabled = false; // if disabled, clicking on button won't do anything\r\n    this._maxFails = 10; // max allowed failed progress updates requests in iframe mode\r\n    this._progKeys = {}; // contains the currently active upload ID progress keys\r\n    this._sizeFlags = {}; // Cache progress keys after setting sizeBox for fewer trips to the DOM\r\n    this._btns = [];\r\n\r\n    this.addButton( this._opts.button );\r\n\r\n    delete this._opts.button;\r\n    this._opts.button = options = null;\r\n\r\n    if ( this._opts.multiple === false ) {\r\n        this._opts.maxUploads = 1;\r\n    }\r\n\r\n    if ( this._opts.dropzone !== '' ) {\r\n        this.addDZ( this._opts.dropzone );\r\n    }\r\n\r\n    if ( this._opts.dropzone === '' && this._btns.length < 1 ) {\r\n        throw new Error( \"Invalid upload button. Make sure the element you're passing exists.\" );\r\n    }\r\n\r\n    if ( this._opts.form !== '' ) {\r\n        this.setForm( this._opts.form );\r\n    }\r\n\r\n    this._createInput();\r\n    this._manDisabled = false;\r\n    this.enable( true );\r\n};\r\n\r\nss.SimpleUpload.prototype = {\r\n\r\n    destroy: function() {\r\n        \"use strict\";\r\n\r\n        // # of upload buttons\r\n        var i = this._btns.length;\r\n\r\n        // Put upload buttons back to the way we found them\r\n        while ( i-- ) {\r\n            // Remove event listener\r\n            if ( this._btns[i].off ) {\r\n                this._btns[i].off();\r\n            }\r\n\r\n            // Remove any lingering classes\r\n            ss.removeClass( this._btns[i], this._opts.hoverClass );\r\n            ss.removeClass( this._btns[i], this._opts.focusClass );\r\n            ss.removeClass( this._btns[i], this._opts.disabledClass );\r\n\r\n            // In case we disabled it\r\n            this._btns[i].disabled = false;\r\n        }\r\n\r\n        this._killInput();\r\n\r\n        // Set a flag to be checked in _last()\r\n        this._destroy = true;\r\n    },\r\n\r\n    /**\r\n    * Send data to browser console if debug is set to true\r\n    */\r\n    log: function( str ) {\r\n        \"use strict\";\r\n\r\n        if ( this._opts && this._opts.debug && window.console && window.console.log ) {\r\n            window.console.log( '[Uploader] ' + str );\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Replaces user data\r\n    * Note that all previously set data is entirely removed and replaced\r\n    */\r\n    setData: function( data ) {\r\n        \"use strict\";\r\n        this._opts.data = data;\r\n    },\r\n\r\n    /**\r\n    * Set or change uploader options\r\n    * @param {Object} options\r\n    */\r\n    setOptions: function( options ) {\r\n        \"use strict\";\r\n        ss.extendObj( this._opts, options );\r\n    },\r\n\r\n    /**\r\n    * Designate an element as an upload button\r\n    */\r\n    addButton: function( button ) {\r\n        var btn;\r\n\r\n        // An array of buttons was passed\r\n        if ( button instanceof Array ) {\r\n\r\n            for ( var i = 0, len = button.length; i < len; i++ ) {\r\n                btn = ss.verifyElem( button[i] );\r\n\r\n                if ( btn !== false ) {\r\n                    this._btns.push( this.rerouteClicks( btn ) );\r\n\r\n                } else {\r\n                    this.log( 'Button with array index ' + i + ' is invalid' );\r\n                }\r\n            }\r\n\r\n        // A single button was passed\r\n        } else {\r\n            btn = ss.verifyElem( button );\r\n\r\n            if ( btn !== false ) {\r\n                this._btns.push( this.rerouteClicks( btn ) );\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Designate an element as a drop zone\r\n    */\r\n    addDZ: function( dropzone ) {\r\n        if ( !XhrOk ) {\r\n            return;\r\n        }\r\n\r\n        dropzone = ss.verifyElem( dropzone );\r\n\r\n        if ( !dropzone ) {\r\n            this.log( 'Invalid or nonexistent element passed for drop zone' );\r\n        } else {\r\n            this.addDropZone( dropzone );\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Designate an element as a progress bar\r\n    * The CSS width % of the element will be updated as the upload progresses\r\n    */\r\n    setProgressBar: function( elem ) {\r\n        \"use strict\";\r\n        this._progBar = ss.verifyElem( elem );\r\n    },\r\n\r\n    /**\r\n    * Designate an element to receive a string containing progress % during upload\r\n    * Note: Uses innerHTML, so any existing child elements will be wiped out\r\n    */\r\n    setPctBox: function( elem ) {\r\n        \"use strict\";\r\n        this._pctBox = ss.verifyElem( elem );\r\n    },\r\n\r\n    /**\r\n    * Designate an element to receive a string containing file size at start of upload\r\n    * Note: Uses innerHTML, so any existing child elements will be wiped out\r\n    */\r\n    setFileSizeBox: function( elem ) {\r\n        \"use strict\";\r\n        this._sizeBox = ss.verifyElem( elem );\r\n    },\r\n\r\n    /**\r\n    * Designate an element to be removed from DOM when upload is completed\r\n    * Useful for removing progress bar, file size, etc. after upload\r\n    */\r\n    setProgressContainer: function( elem ) {\r\n        \"use strict\";\r\n        this._progBox = ss.verifyElem( elem );\r\n    },\r\n\r\n    /**\r\n    * Designate an element to serve as the upload abort button\r\n    */\r\n    setAbortBtn: function( elem, remove ) {\r\n        \"use strict\";\r\n\r\n        this._abortBtn = ss.verifyElem( elem );\r\n        this._removeAbort = false;\r\n\r\n        if ( remove ) {\r\n            this._removeAbort = true;\r\n        }\r\n    },\r\n\r\n    setForm: function( form ) {\r\n        \"use strict\";\r\n\r\n        this._form = ss.verifyElem( form );\r\n\r\n        if ( !this._form || this._form.nodeName.toUpperCase() != 'FORM' ) {\r\n            this.log( 'Invalid or nonexistent element passed for form' );\r\n\r\n        } else {\r\n            var self = this;\r\n            this._opts.autoSubmit = false;\r\n\r\n            if ( this._opts.overrideSubmit ) {\r\n                ss.addEvent( this._form, 'submit', function( e ) {\r\n                    if ( e.preventDefault ) {\r\n                        e.preventDefault();\r\n\r\n                    } else if ( window.event ) {\r\n                        window.event.returnValue = false;\r\n                    }\r\n\r\n                    if ( self._validateForm() ) {\r\n                        self.submit();\r\n                    }\r\n                });\r\n\r\n                this._form.submit = function() {\r\n                    if ( self._validateForm() ) {\r\n                        self.submit();\r\n                    }\r\n                };\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Returns number of files currently in queue\r\n    */\r\n    getQueueSize: function() {\r\n        \"use strict\";\r\n        return this._queue.length;\r\n    },\r\n\r\n    /**\r\n    * Remove current file from upload queue, reset props, cycle to next upload\r\n    */\r\n    removeCurrent: function( id ) {\r\n        \"use strict\";\r\n\r\n        if ( id ) {\r\n            var i = this._queue.length;\r\n\r\n            while ( i-- ) {\r\n                if ( this._queue[i].id === id ) {\r\n                    this._queue.splice( i, 1 );\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            this._queue.splice( 0, 1 );\r\n        }\r\n\r\n        this._cycleQueue();\r\n    },\r\n\r\n    /**\r\n    * Clears Queue so only most recent select file is uploaded\r\n    */\r\n    clearQueue: function() {\r\n        \"use strict\";\r\n        this._queue.length = 0;\r\n    },\r\n\r\n    /**\r\n    * Disables upload functionality\r\n    */\r\n    disable: function( _self ) {\r\n        \"use strict\";\r\n\r\n        var i = this._btns.length,\r\n            nodeName;\r\n\r\n        // _self is always true when disable() is called internally\r\n        this._manDisabled = !_self || this._manDisabled === true ? true : false;\r\n        this._disabled = true;\r\n\r\n        while ( i-- ) {\r\n            nodeName = this._btns[i].nodeName.toUpperCase();\r\n\r\n            if ( nodeName == 'INPUT' || nodeName == 'BUTTON' ) {\r\n                this._btns[i].disabled = true;\r\n            }\r\n\r\n            if ( this._opts.disabledClass !== '' ) {\r\n                ss.addClass( this._btns[i], this._opts.disabledClass );\r\n            }\r\n        }\r\n\r\n        // Hide file input\r\n        if ( this._input && this._input.parentNode ) {\r\n            this._input.parentNode.style.visibility = 'hidden';\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Enables upload functionality\r\n    */\r\n    enable: function( _self ) {\r\n        \"use strict\";\r\n\r\n        // _self will always be true when enable() is called internally\r\n        if ( !_self ) {\r\n            this._manDisabled = false;\r\n        }\r\n\r\n        // Don't enable uploader if it was manually disabled\r\n        if ( this._manDisabled === true ) {\r\n            return;\r\n        }\r\n\r\n        var i = this._btns.length;\r\n\r\n        this._disabled = false;\r\n\r\n        while ( i-- ) {\r\n            ss.removeClass( this._btns[i], this._opts.disabledClass );\r\n            this._btns[i].disabled = false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Updates invisible button position\r\n     */\r\n    updatePosition: function( btn ) {\r\n        \"use strict\";\r\n\r\n        btn = !btn ? this._btns[0] : btn;\r\n\r\n        if ( btn && this._input && this._input.parentNode ) {\r\n            ss.copyLayout( btn, this._input.parentNode );\r\n        }\r\n\r\n        btn = null;\r\n    },\r\n\r\n    rerouteClicks: function( elem ) {\r\n        \"use strict\";\r\n\r\n        var self = this;\r\n\r\n        // ss.addEvent() returns a function to detach, which\r\n        // allows us to call elem.off() to remove mouseover listener\r\n        elem.off = ss.addEvent( elem, 'mouseover', function() {\r\n            if ( self._disabled ) {\r\n                return;\r\n            }\r\n\r\n            if ( !self._input ) {\r\n                self._createInput();\r\n            }\r\n\r\n            self._overBtn = elem;\r\n            ss.copyLayout( elem, self._input.parentNode );\r\n            self._input.parentNode.style.visibility = 'visible';\r\n        });\r\n\r\n        if ( self._opts.autoCalibrate && !ss.isVisible( elem ) ) {\r\n            self.log('Upload button not visible');\r\n\r\n            var interval = function() {\r\n                if ( ss.isVisible( elem ) ) {\r\n                    self.log('Upload button now visible');\r\n\r\n                    window.setTimeout(function() {\r\n                        self.updatePosition( elem );\r\n\r\n                        if ( self._btns.length === 1 ) {\r\n                            self._input.parentNode.style.visibility = 'hidden';\r\n                        }\r\n                    }, 200);\r\n\r\n                } else {\r\n                    window.setTimeout( interval, 500 );\r\n                }\r\n            };\r\n\r\n            window.setTimeout( interval, 500 );\r\n        }\r\n\r\n        return elem;\r\n    },\r\n\r\n    /**\r\n    * Validates input and directs to either XHR method or iFrame method\r\n    */\r\n    submit: function( _, auto ) {\r\n        \"use strict\";\r\n\r\n        if ( !auto && this._queue.length < 1 ) {\r\n            this._opts.onBlankSubmit.call( this );\r\n            return;\r\n        }\r\n\r\n        if ( this._disabled ||\r\n            this._active >= this._opts.maxUploads ||\r\n            this._queue.length < 1 )\r\n        {\r\n            return;\r\n        }\r\n\r\n        if ( !this._checkFile( this._queue[0] ) ) {\r\n            return;\r\n        }\r\n\r\n        // User returned false to cancel upload\r\n        if ( false === this._opts.onSubmit.call( this, this._queue[0].name, this._queue[0].ext, this._queue[0].btn, this._queue[0].size ) ) {\r\n            this.removeCurrent( this._queue[0].id );\r\n            return;\r\n        }\r\n\r\n        // Increment the active upload counter\r\n        this._active++;\r\n\r\n        // Disable uploading if multiple file uploads are not enabled\r\n        // or if queue is disabled and we've reached max uploads\r\n        if ( this._opts.multiple === false ||\r\n            this._opts.queue === false && this._active >= this._opts.maxUploads )\r\n        {\r\n            this.disable( true );\r\n        }\r\n\r\n        this._initUpload( this._queue[0] );\r\n    }\r\n\r\n};\r\n\r\nss.IframeUpload = {\r\n\r\n    _detachEvents: {},\r\n\r\n    _detach: function( id ) {\r\n        if ( this._detachEvents[ id ] ) {\r\n            this._detachEvents[ id ]();\r\n            delete this._detachEvents[ id ];\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Accepts a URI string and returns the hostname\r\n    */\r\n    _getHost: function( uri ) {\r\n        var a = document.createElement( 'a' );\r\n\r\n        a.href = uri;\r\n\r\n        if ( a.hostname ) {\r\n            return a.hostname.toLowerCase();\r\n        }\r\n        return uri;\r\n    },\r\n\r\n    _addFiles: function( file ) {\r\n        var filename = ss.getFilename( file.value ),\r\n            ext = ss.getExt( filename );\r\n\r\n        if ( false === this._opts.onChange.call( this, filename, ext, this._overBtn, undefined, file ) ) {\r\n            return false;\r\n        }\r\n\r\n        this._queue.push({\r\n            id: ss.getUID(),\r\n            file: file,\r\n            name: filename,\r\n            ext: ext,\r\n            btn: this._overBtn,\r\n            size: null\r\n        });\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n    * Handles uploading with iFrame\r\n    */\r\n    _uploadIframe: function( fileObj, progBox, sizeBox, progBar, pctBox, abortBtn, removeAbort ) {\r\n        \"use strict\";\r\n\r\n        var self = this,\r\n            opts = this._opts,\r\n            key = ss.getUID(),\r\n            iframe = ss.getIFrame(),\r\n            form,\r\n            url,\r\n            msgLoaded = false,\r\n            iframeLoaded = false,\r\n            cancel;\r\n\r\n        if ( opts.noParams === true ) {\r\n            url = opts.url;\r\n\r\n        } else {\r\n            // If we're using Nginx Upload Progress Module, append upload key to the URL\r\n            // Also, preserve query string if there is one\r\n            url = !opts.nginxProgressUrl ?\r\n                    opts.url :\r\n                    url + ( ( url.indexOf( '?' ) > -1 ) ? '&' : '?' ) +\r\n                          encodeURIComponent( opts.nginxProgressHeader ) + '=' + encodeURIComponent( key );\r\n        }\r\n\r\n        form = ss.getForm({\r\n            action: url,\r\n            target: iframe.name,\r\n            method: opts.method\r\n        });\r\n\r\n        opts.onProgress.call( this, 0 );\r\n\r\n        if ( pctBox ) {\r\n            pctBox.innerHTML = '0%';\r\n        }\r\n\r\n        if ( progBar ) {\r\n            progBar.style.width = '0%';\r\n        }\r\n\r\n        // For CORS, add a listener for the \"message\" event, which will be\r\n        // triggered by the Javascript snippet in the server response\r\n        if ( opts.cors ) {\r\n            var msgId = ss.getUID();\r\n\r\n            self._detachEvents[ msgId ] = ss.addEvent( window, 'message', function( event ) {\r\n                // Make sure event.origin matches the upload URL\r\n                if ( self._getHost( event.origin ) != self._getHost( opts.url ) ) {\r\n                    self.log('Non-matching origin: ' + event.origin);\r\n                    return;\r\n                }\r\n\r\n                msgLoaded = true;\r\n                self._detach( msgId );\r\n                opts.endNonXHR.call( self, fileObj.name, fileObj.btn );\r\n                self._finish( fileObj,  '', '', event.data, sizeBox, progBox, pctBox, abortBtn, removeAbort );\r\n            });\r\n        }\r\n\r\n        self._detachEvents[ iframe.id ] = ss.addEvent( iframe, 'load', function() {\r\n            self._detach( iframe.id );\r\n\r\n            if ( opts.sessionProgressUrl ) {\r\n                form.appendChild( ss.getHidden( opts.sessionProgressName, key ) );\r\n            }\r\n\r\n            // PHP APC upload progress key field must come before the file field\r\n            else if ( opts.progressUrl ) {\r\n                form.appendChild( ss.getHidden( opts.keyParamName, key ) );\r\n            }\r\n\r\n            if ( self._form ) {\r\n                ss.extendObj( opts.data, ss.getFormObj( self._form ) );\r\n            }\r\n\r\n            // Get additional data after startNonXHR() in case setData() was called prior to submitting\r\n            for ( var prop in opts.data ) {\r\n                if ( opts.data.hasOwnProperty( prop ) ) {\r\n                    form.appendChild( ss.getHidden( prop, opts.data[prop] ) );\r\n                }\r\n            }\r\n\r\n            // Add a field (default name: \"XHR_CORS_TRARGETORIGIN\") to tell server this is a CORS request\r\n            // Value of the field is targetOrigin parameter of postMessage(message, targetOrigin)\r\n            if ( opts.cors ) {\r\n                form.appendChild( ss.getHidden( opts.corsInputName, window.location.href ) );\r\n            }\r\n\r\n            form.appendChild( fileObj.file );\r\n\r\n            self._detachEvents[ fileObj.id ] = ss.addEvent( iframe, 'load', function() {\r\n                if ( !iframe || !iframe.parentNode || iframeLoaded ) {\r\n                    return;\r\n                }\r\n\r\n                self._detach( fileObj.id );\r\n                iframeLoaded = true;\r\n\r\n                delete self._progKeys[ key ];\r\n                delete self._sizeFlags[ key ];\r\n\r\n                if ( abortBtn ) {\r\n                    ss.removeEvent( abortBtn, 'click', cancel );\r\n                }\r\n\r\n                // After a CORS response, we wait briefly for the \"message\" event to finish,\r\n                // during which time the msgLoaded var will be set to true, signalling success.\r\n                // If iframe loads without \"message\" event, we assume there was an error\r\n                if ( opts.cors ) {\r\n                    window.setTimeout(function() {\r\n                        ss.remove( iframe );\r\n\r\n                        // If msgLoaded has not been set to true after \"message\" event fires, we\r\n                        // infer that an error must have occurred and respond accordingly\r\n                        if ( !msgLoaded ) {\r\n                            self._errorFinish( fileObj, '', '', false, 'error', progBox, sizeBox, pctBox, abortBtn, removeAbort );\r\n                        }\r\n\r\n                        fileObj = opts = key = iframe = sizeBox = progBox = pctBox = abortBtn = removeAbort = null;\r\n                    }, 600);\r\n                }\r\n\r\n                // Non-CORS upload\r\n                else {\r\n                    try {\r\n                        var doc = iframe.contentDocument ? iframe.contentDocument : iframe.contentWindow.document,\r\n                            response = doc.body.innerHTML;\r\n\r\n                        ss.remove( iframe );\r\n                        iframe = null;\r\n\r\n                        opts.endNonXHR.call( self, fileObj.name, fileObj.btn );\r\n\r\n                        // No way to get status and statusText for an iframe so return empty strings\r\n                        self._finish( fileObj, '', '', response, sizeBox, progBox, pctBox, abortBtn, removeAbort );\r\n\r\n                    } catch ( e ) {\r\n                        self._errorFinish( fileObj, '', e.message, false, 'error', progBox, sizeBox, pctBox, abortBtn, removeAbort );\r\n                    }\r\n\r\n                    fileObj = opts = key = sizeBox = progBox = pctBox = null;\r\n                }\r\n            });// end load\r\n\r\n            if ( abortBtn ) {\r\n                cancel = function() {\r\n                    ss.removeEvent( abortBtn, 'click', cancel );\r\n\r\n                    delete self._progKeys[key];\r\n                    delete self._sizeFlags[key];\r\n\r\n                    if ( iframe ) {\r\n                        iframeLoaded = true;\r\n                        self._detach( fileObj.id );\r\n\r\n                        try {\r\n                            if ( iframe.contentWindow.document.execCommand ) {\r\n                                iframe.contentWindow.document.execCommand('Stop');\r\n                            }\r\n                        } catch( err ) {}\r\n\r\n                        try {\r\n                            iframe.src = 'javascript'.concat(':false;');\r\n                        } catch( err ) {}\r\n\r\n                        window.setTimeout(function() {\r\n                            ss.remove( iframe );\r\n                            iframe = null;\r\n                        }, 1);\r\n                    }\r\n\r\n                    self.log('Upload aborted');\r\n                    opts.onAbort.call( self, fileObj.name, fileObj.btn, fileObj.size );\r\n                    self._last( sizeBox, progBox, pctBox, abortBtn, removeAbort );\r\n                };\r\n\r\n                ss.addEvent( abortBtn, 'click', cancel );\r\n            }\r\n\r\n            self.log( 'Commencing upload using iframe' );\r\n            form.submit();\r\n\r\n            // Remove form and begin next upload\r\n            window.setTimeout(function() {\r\n                ss.remove( form );\r\n                form = null;\r\n                self.removeCurrent( fileObj.id );\r\n            }, 1);\r\n\r\n            if ( self._hasProgUrl ) {\r\n                // Add progress key to active key array\r\n                self._progKeys[key] = 1;\r\n\r\n                window.setTimeout( function() {\r\n                    self._getProg( key, progBar, sizeBox, pctBox, 1 );\r\n                    progBar = sizeBox = pctBox = null;\r\n                }, 600 );\r\n            }\r\n\r\n        });// end load\r\n\r\n        document.body.appendChild( form );\r\n        document.body.appendChild( iframe );\r\n    },\r\n\r\n    /**\r\n    * Retrieves upload progress updates from the server\r\n    * (For fallback upload progress support)\r\n    */\r\n    _getProg: function( key, progBar, sizeBox, pctBox, counter ) {\r\n        \"use strict\";\r\n\r\n        var self = this,\r\n            opts = this._opts,\r\n            time = new Date().getTime(),\r\n            xhr,\r\n            url,\r\n            callback;\r\n\r\n        if ( !key ) {\r\n            return;\r\n        }\r\n\r\n        // Nginx Upload Progress Module\r\n        if ( opts.nginxProgressUrl ) {\r\n            url = opts.nginxProgressUrl + '?' +\r\n                  encodeURIComponent( opts.nginxProgressHeader ) + '=' + encodeURIComponent( key ) +\r\n                  '&_=' + time;\r\n        }\r\n\r\n        else if ( opts.sessionProgressUrl ) {\r\n            url = opts.sessionProgressUrl;\r\n        }\r\n\r\n        // PHP APC upload progress\r\n        else if ( opts.progressUrl ) {\r\n            url = opts.progressUrl +\r\n            '?progresskey=' + encodeURIComponent( key ) +\r\n            '&_=' + time;\r\n        }\r\n\r\n        callback = function() {\r\n            var response,\r\n                size,\r\n                pct,\r\n                status,\r\n                statusText;\r\n\r\n            try {\r\n                // XDR doesn't have readyState so we just assume that it finished correctly\r\n                if ( callback && ( opts.cors || xhr.readyState === 4 ) ) {\r\n                    callback = undefined;\r\n                    xhr.onreadystatechange = function() {};\r\n\r\n                    try {\r\n                        statusText = xhr.statusText;\r\n                        status = xhr.status;\r\n                    } catch( e ) {\r\n                        statusText = '';\r\n                        status = '';\r\n                    }\r\n\r\n                    // XDR also doesn't have status, so just assume that everything is fine\r\n                    if ( opts.cors || ( status >= 200 && status < 300 ) ) {\r\n                        response = ss.parseJSON( xhr.responseText );\r\n\r\n                        if ( response === false ) {\r\n                            self.log( 'Error parsing progress response (expecting JSON)' );\r\n                            return;\r\n                        }\r\n\r\n                        // Handle response if using Nginx Upload Progress Module\r\n                        if ( opts.nginxProgressUrl ) {\r\n\r\n                            if ( response.state == 'uploading' ) {\r\n                                size = parseInt( response.size, 10 );\r\n                                if ( size > 0 ) {\r\n                                    pct = Math.round( ( parseInt( response.received, 10 ) / size ) * 100 );\r\n                                    size = Math.round( size / 1024 ); // convert to kilobytes\r\n                                }\r\n\r\n                            } else if ( response.state == 'done' ) {\r\n                                pct = 100;\r\n\r\n                            } else if ( response.state == 'error' ) {\r\n                                self.log( 'Error requesting upload progress: ' + response.status );\r\n                                return;\r\n                            }\r\n                        }\r\n\r\n                        // Handle response if using PHP APC\r\n                        else if ( opts.sessionProgressUrl || opts.progressUrl ) {\r\n                            if ( response.success === true ) {\r\n                                size = parseInt( response.size, 10 );\r\n                                pct = parseInt( response.pct, 10 );\r\n                            }\r\n                        }\r\n\r\n                        // Update progress bar width\r\n                        if ( pct ) {\r\n                            if ( pctBox ) {\r\n                                pctBox.innerHTML = pct + '%';\r\n                            }\r\n\r\n                            if ( progBar ) {\r\n                                progBar.style.width = pct + '%';\r\n                            }\r\n\r\n                            opts.onProgress.call( self, pct );\r\n                        }\r\n\r\n                        if ( size && !self._sizeFlags[key] ) {\r\n                            if ( sizeBox ) {\r\n                                sizeBox.innerHTML = size + 'K';\r\n                            }\r\n\r\n                            self._sizeFlags[key] = 1;\r\n                            opts.onUpdateFileSize.call( self, size );\r\n                        }\r\n\r\n                        // Stop attempting progress checks if we keep failing\r\n                        if ( !pct &&\r\n                             !size &&\r\n                             counter >= self._maxFails )\r\n                        {\r\n                            counter++;\r\n                            self.log( 'Failed progress request limit reached. Count: ' + counter );\r\n                            return;\r\n                        }\r\n\r\n                        // Begin countdown until next progress update check\r\n                        if ( pct < 100 && self._progKeys[key] ) {\r\n                            window.setTimeout( function() {\r\n                                self._getProg( key, progBar, sizeBox, pctBox, counter );\r\n\r\n                                key = progBar = sizeBox = pctBox = counter = null;\r\n                            }, opts.checkProgressInterval );\r\n                        }\r\n\r\n                        // We didn't get a 2xx status so don't continue sending requests\r\n                    } else {\r\n                        delete self._progKeys[key];\r\n                        self.log( 'Error requesting upload progress: ' + status + ' ' + statusText );\r\n                    }\r\n\r\n                    xhr = size = pct = status = statusText = response = null;\r\n                }\r\n\r\n            } catch( e ) {\r\n                self.log( 'Error requesting upload progress: ' + e.message );\r\n            }\r\n        };\r\n\r\n        // CORS requests in IE8 and IE9 must use XDomainRequest\r\n        if ( opts.cors && !opts.sessionProgressUrl ) {\r\n\r\n            if ( window.XDomainRequest ) {\r\n                xhr = new window.XDomainRequest();\r\n                xhr.open( 'GET', url, true );\r\n                xhr.onprogress = xhr.ontimeout = function() {};\r\n                xhr.onload = callback;\r\n\r\n                xhr.onerror = function() {\r\n                    delete self._progKeys[key];\r\n                    key = null;\r\n                    self.log('Error requesting upload progress');\r\n                };\r\n\r\n                // IE7 or some other dinosaur -- just give up\r\n            } else {\r\n                return;\r\n            }\r\n\r\n        } else {\r\n            var method = !opts.sessionProgressUrl ? 'GET' : 'POST',\r\n                headers = {},\r\n                params;\r\n\r\n            xhr = ss.newXHR();\r\n            xhr.onreadystatechange = callback;\r\n            xhr.open( method, url, true );\r\n\r\n            // PHP session progress updates must be a POST request\r\n            if ( opts.sessionProgressUrl ) {\r\n                params = encodeURIComponent( opts.sessionProgressName ) + '=' + encodeURIComponent( key );\r\n                headers['Content-Type'] = 'application/x-www-form-urlencoded';\r\n            }\r\n\r\n            // Set the upload progress header for Nginx\r\n            if ( opts.nginxProgressUrl ) {\r\n                headers[opts.nginxProgressHeader] = key;\r\n            }\r\n\r\n            headers['X-Requested-With'] = 'XMLHttpRequest';\r\n            headers['Accept'] = 'application/json, text/javascript, */*; q=0.01';\r\n\r\n            ss.extendObj( headers, opts.customProgressHeaders );\r\n\r\n            for ( var i in headers ) {\r\n                if ( headers.hasOwnProperty( i ) ) {\r\n                    if ( opts.encodeHeaders ) {\r\n                        xhr.setRequestHeader( i, ss.encodeUTF8( headers[ i ] + '' ) );\r\n\r\n                    } else {\r\n                        xhr.setRequestHeader( i, headers[ i ] + '' );\r\n                    }\r\n                }\r\n            }\r\n\r\n           xhr.send( ( opts.sessionProgressUrl &&  params ) || null );\r\n        }\r\n    },\r\n\r\n    _initUpload: function( fileObj ) {\r\n        if ( false === this._opts.startNonXHR.call( this, fileObj.name, fileObj.btn ) ) {\r\n\r\n            if ( this._disabled ) {\r\n                this.enable( true );\r\n            }\r\n\r\n            this._active--;\r\n            return;\r\n        }\r\n\r\n        this._hasProgUrl = ( this._opts.progressUrl ||\r\n                             this._opts.sessionProgressUrl ||\r\n                             this._opts.nginxProgressUrl ) ?\r\n                             true : false;\r\n\r\n        this._uploadIframe( fileObj, this._progBox, this._sizeBox, this._progBar, this._pctBox, this._abortBtn, this._removeAbort );\r\n\r\n        fileObj = this._progBox = this._sizeBox = this._progBar = this._pctBox = this._abortBtn = this._removeAbort = null;\r\n    }\r\n};\r\n\r\nss.XhrUpload = {\r\n\r\n    _addFiles: function( files ) {\r\n        var total = files.length,\r\n            filename,\r\n            ext,\r\n            size,\r\n            i;\r\n\r\n        if ( !this._opts.multiple ) {\r\n            total = 1;\r\n        }\r\n\r\n        for ( i = 0; i < total; i++ ) {\r\n            filename = ss.getFilename( files[i].name );\r\n            ext = ss.getExt( filename );\r\n            size = Math.round( files[i].size / 1024 );\r\n\r\n            if ( false === this._opts.onChange.call( this, filename, ext, this._overBtn, size, files[i] ) ) {\r\n                return false;\r\n            }\r\n\r\n            this._queue.push({\r\n                id: ss.getUID(),\r\n                file: files[i],\r\n                name: filename,\r\n                ext: ext,\r\n                btn: this._overBtn,\r\n                size: size\r\n            });\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n    * Handles uploading with XHR\r\n    */\r\n    _uploadXhr: function( fileObj, url, params, headers, sizeBox, progBar, progBox, pctBox, abortBtn, removeAbort ) {\r\n        \"use strict\";\r\n\r\n        var self = this,\r\n            opts = this._opts,\r\n            xhr = ss.newXHR(),\r\n            callback,\r\n            cancel;\r\n\r\n        // Inject file size into size box\r\n        if ( sizeBox ) {\r\n            sizeBox.innerHTML = fileObj.size + 'K';\r\n        }\r\n\r\n        // Begin progress bars at 0%\r\n        if ( pctBox ) {\r\n            pctBox.innerHTML = '0%';\r\n        }\r\n\r\n        if ( progBar ) {\r\n            progBar.style.width = '0%';\r\n        }\r\n\r\n        // Borrows heavily from jQuery ajax transport\r\n        callback = function( _, isAbort ) {\r\n            var statusText;\r\n\r\n            try {\r\n                // Was never called and is aborted or complete\r\n                if ( callback && ( isAbort || xhr.readyState === 4 ) ) {\r\n                    callback = undefined;\r\n                    xhr.onreadystatechange = function() {};\r\n\r\n                    // If it's an abort\r\n                    if ( isAbort ) {\r\n                        // Abort it manually if needed\r\n                        if ( xhr.readyState !== 4 ) {\r\n                            xhr.abort();\r\n                        }\r\n\r\n                        opts.onAbort.call( self, fileObj.name, fileObj.btn, fileObj.size );\r\n                        self._last( sizeBox, progBox, pctBox, abortBtn, removeAbort );\r\n\r\n                    } else {\r\n                        if ( abortBtn ) {\r\n                            ss.removeEvent( abortBtn, 'click', cancel );\r\n                        }\r\n\r\n                        try {\r\n                            statusText = xhr.statusText;\r\n                        } catch( e ) {\r\n                            // We normalize with Webkit giving an empty statusText\r\n                            statusText = '';\r\n                        }\r\n\r\n                        if ( xhr.status >= 200 && xhr.status < 300 ) {\r\n                            opts.endXHR.call( self, fileObj.name, fileObj.size, fileObj.btn );\r\n                            self._finish( fileObj, xhr.status, statusText, xhr.responseText, sizeBox, progBox, pctBox, abortBtn, removeAbort );\r\n\r\n                            // We didn't get a 2xx status so throw an error\r\n                        } else {\r\n                            self._errorFinish( fileObj, xhr.status, statusText, xhr.responseText, 'error', progBox, sizeBox, pctBox, abortBtn, removeAbort );\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n            catch ( e ) {\r\n                if ( !isAbort ) {\r\n                    self._errorFinish( fileObj, -1, e.message, false, 'error', progBox, sizeBox, pctBox, abortBtn, removeAbort );\r\n                }\r\n            }\r\n        };\r\n\r\n        if ( abortBtn ) {\r\n            cancel = function() {\r\n                ss.removeEvent( abortBtn, 'click', cancel );\r\n\r\n                if ( callback ) {\r\n                    callback( undefined, true );\r\n                }\r\n            };\r\n\r\n            ss.addEvent( abortBtn, 'click', cancel );\r\n        }\r\n\r\n        xhr.onreadystatechange = callback;\r\n        xhr.open( opts.method.toUpperCase(), url, true );\r\n        xhr.withCredentials = !!opts.withCredentials;\r\n\r\n        ss.extendObj( headers, opts.customHeaders );\r\n\r\n        for ( var i in headers ) {\r\n            if ( headers.hasOwnProperty( i ) ) {\r\n                if ( opts.encodeHeaders ) {\r\n                    xhr.setRequestHeader( i, ss.encodeUTF8( headers[ i ] + '' ) );\r\n\r\n                } else {\r\n                    xhr.setRequestHeader( i, headers[ i ] + '' );\r\n                }\r\n            }\r\n        }\r\n\r\n        ss.addEvent( xhr.upload, 'progress', function( event ) {\r\n            if ( event.lengthComputable ) {\r\n                var pct = Math.round( event.loaded / event.total * 100 );\r\n\r\n                opts.onProgress.call( self, pct );\r\n\r\n                if ( pctBox ) {\r\n                    pctBox.innerHTML = pct + '%';\r\n                }\r\n\r\n                if ( progBar ) {\r\n                    progBar.style.width = pct + '%';\r\n                }\r\n            }\r\n        });\r\n\r\n        opts.onProgress.call( this, 0 );\r\n\r\n        if ( opts.multipart === true ) {\r\n            var formData = new FormData();\r\n\r\n            var hasFile = false;\r\n\r\n            for ( var prop in params ) {\r\n                if ( params.hasOwnProperty( prop ) ) {\r\n                    if ( prop === opts.name && opts.noParams === true && !self._form ) {\r\n                        hasFile = true;\r\n                    }\r\n                    formData.append( prop, params[prop] );\r\n                }\r\n            }\r\n\r\n            if ( !hasFile ) {\r\n                formData.append( opts.name, fileObj.file );\r\n            }\r\n\r\n            this.log( 'Commencing upload using multipart form' );\r\n            xhr.send( formData );\r\n\r\n        } else {\r\n            this.log( 'Commencing upload using binary stream' );\r\n            xhr.send( fileObj.file );\r\n        }\r\n\r\n        // Remove file from upload queue and begin next upload\r\n        this.removeCurrent( fileObj.id );\r\n    },\r\n\r\n    _initUpload: function( fileObj ) {\r\n        \"use strict\";\r\n\r\n        var params = {},\r\n            headers = {},\r\n            url;\r\n\r\n        // Call the startXHR() callback and stop upload if it returns false\r\n        // We call it before _uploadXhr() in case setProgressBar, setPctBox, etc., is called\r\n        if ( false === this._opts.startXHR.call( this, fileObj.name, fileObj.size, fileObj.btn ) ) {\r\n\r\n            if ( this._disabled ) {\r\n                this.enable( true );\r\n            }\r\n\r\n            this._active--;\r\n            return;\r\n        }\r\n\r\n        headers['X-Requested-With'] = 'XMLHttpRequest';\r\n        headers['X-File-Name'] = fileObj.name;\r\n\r\n        if ( this._opts.responseType.toLowerCase() == 'json' ) {\r\n            headers['Accept'] = 'application/json, text/javascript, */*; q=0.01';\r\n        }\r\n\r\n        if ( !this._opts.multipart ) {\r\n            headers['Content-Type'] = 'application/octet-stream';\r\n        }\r\n\r\n        if ( this._form ) {\r\n            ss.extendObj( params, ss.getFormObj( this._form ) );\r\n        }\r\n\r\n        // We get the any additional data here after startXHR()\r\n        ss.extendObj( params, this._opts.data );\r\n\r\n        // Build query string while preserving any existing parameters\r\n        url = this._opts.noParams === true ?\r\n                this._opts.url :\r\n                this._opts.url + ( ( this._opts.url.indexOf( '?' ) > -1 ) ? '&' : '?' ) + ss.obj2string( params );\r\n\r\n        this._uploadXhr( fileObj, url, params, headers, this._sizeBox, this._progBar, this._progBox, this._pctBox, this._abortBtn, this._removeAbort );\r\n\r\n        this._sizeBox = this._progBar = this._progBox = this._pctBox = this._abortBtn = this._removeAbort = null;\r\n    }\r\n\r\n};\r\n\r\nss.DragAndDrop = {\r\n\r\n    _dragFileCheck: function( e ) {\r\n        if ( e.dataTransfer.types ) {\r\n            for ( var i = 0; i < e.dataTransfer.types.length; i++ ) {\r\n                if ( e.dataTransfer.types[i] == 'Files' ) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    addDropZone: function( elem ) {\r\n        var self = this,\r\n            collection = [];\r\n\r\n        ss.addStyles( elem, {\r\n            'zIndex': 16777271\r\n        });\r\n\r\n        elem.ondragenter = function( e ) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            if ( !self._dragFileCheck( e ) ) {\r\n                return false;\r\n            }\r\n\r\n            if ( collection.length === 0 ) {\r\n                ss.addClass( this, self._opts.dragClass );\r\n            }\r\n\r\n            if ( ss.indexOf( collection, e.target ) === -1 ) {\r\n                collection.push( e.target );\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        elem.ondragover = function( e ) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            if ( self._dragFileCheck( e ) ) {\r\n                e.dataTransfer.dropEffect = 'copy';\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        elem.ondragend = function() {\r\n            ss.removeClass( this, self._opts.dragClass );\r\n            return false;\r\n        };\r\n\r\n        elem.ondragleave = function( e ) {\r\n            ss.arrayDelete( collection, e.target );\r\n\r\n            if ( collection.length === 0 ) {\r\n                ss.removeClass( this, self._opts.dragClass );\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        elem.ondrop = function( e ) {\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            ss.arrayDelete( collection, e.target );\r\n\r\n            if ( collection.length === 0 ) {\r\n                ss.removeClass( this, self._opts.dragClass );\r\n            }\r\n\r\n            if ( !self._dragFileCheck( e ) ) {\r\n                return;\r\n            }\r\n\r\n            if ( false !== self._addFiles( e.dataTransfer.files ) ) {\r\n                self._cycleQueue();\r\n            }\r\n        };\r\n    }\r\n};\r\n\r\nss.extendObj( ss.SimpleUpload.prototype, {\r\n\r\n    _createInput: function() {\r\n        \"use strict\";\r\n\r\n        var self = this,\r\n            div = document.createElement( 'div' );\r\n\r\n        this._input = document.createElement( 'input' );\r\n        this._input.type = 'file';\r\n        this._input.name = this._opts.name;\r\n\r\n        // Don't allow multiple file selection in Safari -- it has a nasty bug\r\n        // http://stackoverflow.com/q/7231054/1091949\r\n        if ( XhrOk && !isSafari && this._opts.multiple ) {\r\n            this._input.multiple = true;\r\n        }\r\n\r\n        // Check support for file input accept attribute\r\n        if ( 'accept' in this._input && this._opts.accept !== '' ) {\r\n            this._input.accept = this._opts.accept;\r\n        }\r\n\r\n        ss.addStyles( div, {\r\n            'display' : 'block',\r\n            'position' : 'absolute',\r\n            'overflow' : 'hidden',\r\n            'margin' : 0,\r\n            'padding' : 0,\r\n            'opacity' : 0,\r\n            'direction' : 'ltr',\r\n            'zIndex': 16777270\r\n        });\r\n\r\n        if ( div.style.opacity !== '0' ) {\r\n            div.style.filter = 'alpha(opacity=0)';\r\n        }\r\n\r\n        ss.addStyles( this._input, {\r\n            'position' : 'absolute',\r\n            'right' : 0,\r\n            'margin' : 0,\r\n            'padding' : 0,\r\n            'fontSize' : '480px',\r\n            'fontFamily' : 'sans-serif',\r\n            'cursor' : 'pointer',\r\n            'height' : '100%',\r\n            'zIndex': 16777270\r\n        });\r\n\r\n        this._input.turnOff = ss.addEvent( this._input, 'change', function() {\r\n            if ( !self._input || self._input.value === '' ) {\r\n                return;\r\n            }\r\n\r\n            if ( false === self._addFiles( XhrOk ? self._input.files : self._input ) ) {\r\n                return;\r\n            }\r\n\r\n            ss.removeClass( self._overBtn, self._opts.hoverClass );\r\n            ss.removeClass( self._overBtn, self._opts.focusClass );\r\n\r\n            self._killInput();\r\n\r\n            // Then create a new file input\r\n            self._createInput();\r\n\r\n            // Submit if autoSubmit option is true\r\n            if ( self._opts.autoSubmit ) {\r\n                self.submit();\r\n            }\r\n        });\r\n\r\n        if ( self._opts.hoverClass !== '' ) {\r\n            div.mouseOverOff = ss.addEvent( div, 'mouseover', function() {\r\n                ss.addClass( self._overBtn, self._opts.hoverClass );\r\n            });\r\n        }\r\n\r\n        div.mouseOutOff = ss.addEvent( div, 'mouseout', function() {\r\n            self._input.parentNode.style.visibility = 'hidden';\r\n\r\n            if ( self._opts.hoverClass !== '' ) {\r\n                ss.removeClass( self._overBtn, self._opts.hoverClass );\r\n                ss.removeClass( self._overBtn, self._opts.focusClass );\r\n            }\r\n        });\r\n\r\n        if ( self._opts.focusClass !== '' ) {\r\n            this._input.focusOff = ss.addEvent( this._input, 'focus', function() {\r\n                ss.addClass( self._overBtn, self._opts.focusClass );\r\n            });\r\n\r\n            this._input.blurOff = ss.addEvent( this._input, 'blur', function() {\r\n                ss.removeClass( self._overBtn, self._opts.focusClass );\r\n            });\r\n        }\r\n\r\n        div.appendChild( this._input );\r\n        document.body.appendChild( div );\r\n        div = null;\r\n    },\r\n\r\n    /**\r\n    * Final cleanup function after upload ends\r\n    */\r\n    _last: function( sizeBox, progBox, pctBox, abortBtn, removeAbort ) {\r\n        \"use strict\";\r\n\r\n        if ( sizeBox ) {\r\n           sizeBox.innerHTML = '';\r\n        }\r\n\r\n        if ( pctBox ) {\r\n            pctBox.innerHTML = '';\r\n        }\r\n\r\n        if ( abortBtn && removeAbort ) {\r\n            ss.remove( abortBtn );\r\n        }\r\n\r\n        if ( progBox ) {\r\n            ss.remove( progBox );\r\n        }\r\n\r\n        // Decrement the active upload counter\r\n        this._active--;\r\n\r\n        sizeBox = progBox = pctBox = abortBtn = removeAbort = null;\r\n\r\n        if ( this._disabled ) {\r\n            this.enable( true );\r\n        }\r\n\r\n        // Burn it all down if destroy() was called\r\n        // We have to do it here after everything is finished to avoid any errors\r\n        if ( this._destroy &&\r\n             this._queue.length === 0 &&\r\n             this._active === 0 )\r\n        {\r\n            for ( var prop in this ) {\r\n                if ( this.hasOwnProperty( prop ) ) {\r\n                    delete this[ prop ];\r\n                }\r\n            }\r\n\r\n        // Otherwise just go to the next upload as usual\r\n        } else {\r\n            this._cycleQueue();\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Completes upload request if an error is detected\r\n    */\r\n    _errorFinish: function( fileObj, status, statusText, response, errorType, progBox, sizeBox, pctBox, abortBtn, removeAbort ) {\r\n        \"use strict\";\r\n\r\n        this.log( 'Upload failed: ' + status + ' ' + statusText );\r\n        this._opts.onError.call( this, fileObj.name, errorType, status, statusText, response, fileObj.btn, fileObj.size );\r\n        this._last( sizeBox, progBox, pctBox, abortBtn, removeAbort );\r\n\r\n        fileObj = status = statusText = response = errorType = sizeBox = progBox = pctBox = abortBtn = removeAbort = null;\r\n    },\r\n\r\n    /**\r\n    * Completes upload request if the transfer was successful\r\n    */\r\n    _finish: function( fileObj, status, statusText, response, sizeBox, progBox, pctBox, abortBtn, removeAbort ) {\r\n        \"use strict\";\r\n\r\n        this.log( 'Server response: ' + response );\r\n\r\n        if ( this._opts.responseType.toLowerCase() == 'json' ) {\r\n            response = ss.parseJSON( response );\r\n\r\n            if ( response === false ) {\r\n                this._errorFinish( fileObj, status, statusText, false, 'parseerror', progBox, sizeBox, abortBtn, removeAbort );\r\n                return;\r\n            }\r\n        }\r\n\r\n        this._opts.onComplete.call( this, fileObj.name, response, fileObj.btn, fileObj.size );\r\n        this._last( sizeBox, progBox, pctBox, abortBtn, removeAbort );\r\n        fileObj = status = statusText = response = sizeBox = progBox = pctBox = abortBtn = removeAbort = null;\r\n    },\r\n\r\n    /**\r\n    * Verifies that file is allowed\r\n    * Checks file extension and file size if limits are set\r\n    */\r\n    _checkFile: function( fileObj ) {\r\n        \"use strict\";\r\n\r\n        var extOk = false,\r\n            i = this._opts.allowedExtensions.length;\r\n\r\n        // Only file extension if allowedExtensions is set\r\n        if ( i > 0 ) {\r\n            while ( i-- ) {\r\n                if ( this._opts.allowedExtensions[i].toLowerCase() == fileObj.ext.toLowerCase() ) {\r\n                    extOk = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if ( !extOk ) {\r\n                this.removeCurrent( fileObj.id );\r\n                this.log( 'File extension not permitted' );\r\n                this._opts.onExtError.call( this, fileObj.name, fileObj.ext );\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if ( fileObj.size &&\r\n            this._opts.maxSize !== false &&\r\n            fileObj.size > this._opts.maxSize )\r\n        {\r\n            this.removeCurrent( fileObj.id );\r\n            this.log( fileObj.name + ' exceeds ' + this._opts.maxSize + 'K limit' );\r\n            this._opts.onSizeError.call( this, fileObj.name, fileObj.size );\r\n            return false;\r\n        }\r\n\r\n        fileObj = null;\r\n\r\n        return true;\r\n    },\r\n\r\n    _killInput: function() {\r\n        \"use strict\";\r\n\r\n        if ( !this._input ) {\r\n            return;\r\n        }\r\n\r\n        if ( this._input.turnOff ) {\r\n            this._input.turnOff();\r\n        }\r\n\r\n        if ( this._input.focusOff ) {\r\n            this._input.focusOff();\r\n        }\r\n\r\n        if ( this._input.blurOff ) {\r\n            this._input.blurOff();\r\n        }\r\n\r\n        if ( this._input.parentNode.mouseOverOff ) {\r\n            this._input.parentNode.mouseOverOff();\r\n        }\r\n\r\n        ss.remove( this._input.parentNode );\r\n        delete this._input;\r\n        this._input = null;\r\n    },\r\n\r\n    /**\r\n    * Enables uploader and submits next file for upload\r\n    */\r\n    _cycleQueue: function() {\r\n        \"use strict\";\r\n\r\n        if ( this._queue.length > 0 && this._opts.autoSubmit ) {\r\n            this.submit( undefined, true );\r\n        }\r\n    },\r\n\r\n    _validateForm: function() {\r\n        \"use strict\";\r\n\r\n        if ( this._form.checkValidity && !this._form.checkValidity() ) {\r\n            return false;\r\n\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n});\r\n\r\nif ( XhrOk ) {\r\n    ss.extendObj( ss.SimpleUpload.prototype, ss.XhrUpload );\r\n\r\n} else {\r\n    ss.extendObj( ss.SimpleUpload.prototype, ss.IframeUpload );\r\n}\r\n\r\nss.extendObj( ss.SimpleUpload.prototype, ss.DragAndDrop );\r\n\r\nreturn ss;\r\n\r\n}));"]}